version: "3.3"

volumes:
  shared-workspace:

networks:
  spark-net:
    driver: bridge
  hdfs-net:
    driver: bridge

services:
  spark-master:
    image: uqteaching/cloudcomputing:spark-master-v1
    container_name: spark-master
    networks:
      - "spark-net"
    ports:
      - "7077:7077"
    environment:
      - INIT_DAEMON_STEP=setup_spark
      - "PYSPARK_PYTHON=/usr/bin/python3"
      - "PYSPARK_DRIVER_PYTHON=/usr/bin/python3"

  spark-worker-1:
    image: uqteaching/cloudcomputing:spark-worker-v1
    container_name: spark-worker-1
    depends_on:
      - spark-master
    networks:
      - "spark-net"
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"
      - "PYSPARK_PYTHON=/usr/bin/python3"
      - "PYSPARK_DRIVER_PYTHON=/usr/bin/python3"

  spark-worker-2:
    image: uqteaching/cloudcomputing:spark-worker-v1
    container_name: spark-worker-2
    depends_on:
      - spark-master
    networks:
      - "spark-net"
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"
      - "PYSPARK_PYTHON=/usr/bin/python3"
      - "PYSPARK_DRIVER_PYTHON=/usr/bin/python3"

  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode
    restart: always
    ports:
      - "9870:9870"
      - "9000:9000"
    volumes:
      - hadoop_namenode:/hadoop/dfs/name
    networks:
      - "hdfs-net"
    environment:
      - CLUSTER_NAME=test
    env_file:
      - ./hadoop.env

  resourcemanager:
    image: bde2020/hadoop-resourcemanager:2.0.0-hadoop3.2.1-java8
    container_name: resourcemanager
    restart: always
    depends_on:
      - namenode
      - datanode1
      - datanode2
      - datanode3
    ports:
      - "8088:8088"
    env_file:
      - ./hadoop.env
    networks:
      - "hdfs-net"

  historyserver:
    image: bde2020/hadoop-historyserver:2.0.0-hadoop3.2.1-java8
    container_name: historyserver
    restart: always
    depends_on:
      - namenode
      - datanode1
      - datanode2
      - datanode3
    volumes:
      - hadoop_historyserver:/hadoop/yarn/timeline
    env_file:
      - ./hadoop.env
    networks:
      - "hdfs-net"

  nodemanager1:
    image: bde2020/hadoop-nodemanager:2.0.0-hadoop3.2.1-java8
    container_name: nodemanager
    restart: always
    depends_on:
      - namenode
      - datanode1
      - datanode2
      - datanode3
    env_file:
      - ./hadoop.env
    networks:
      - "hdfs-net"

  datanode1:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode1
    restart: always
    depends_on:
      - namenode
    volumes:
      - hadoop_datanode1:/hadoop/dfs/data
    env_file:
      - ./hadoop.env
    networks:
      - "hdfs-net"

  datanode2:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode2
    restart: always
    depends_on:
      - namenode
    volumes:
      - hadoop_datanode2:/hadoop/dfs/data
    env_file:
      - ./hadoop.env
    networks:
      - "hdfs-net"

  datanode3:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode3
    restart: always
    depends_on:
      - namenode
    volumes:
      - hadoop_datanode3:/hadoop/dfs/data
    env_file:
      - ./hadoop.env
    networks:
      - "hdfs-net"

  jupyter-notebook:
    container_name: jupyternb
    image: jupyter/all-spark-notebook:42f4c82a07ff
    depends_on:
      - spark-master
    expose:
      - "8888"
    networks:
      - "spark-net"
    ports:
      - "8888:8888"
    volumes:
      - ./nbs:/home/jovyan/work/nbs
      - ./events:/tmp/spark-events
    environment:
      - "PYSPARK_PYTHON=/usr/bin/python3"
      - "PYSPARK_DRIVER_PYTHON=/usr/bin/python3"
      - "JUPYTER_ENABLE_LAB=yes"
      - "JUPYTER_TOKEN="
    command: "start-notebook.sh \
          --ip=0.0.0.0 \
          --allow-root \
          --notebook-dir=/home/jovyan/work/nbs \
          "

volumes:
  hadoop_namenode:
  hadoop_datanode1:
  hadoop_datanode2:
  hadoop_datanode3:
  hadoop_historyserver:
